#!/usr/bin/env bash

monitor_kubectl_pods()
(
  set +o pipefail
  mkdir -p "${1}"
  cd "${1}"
  echo "monitoring kubectl pods"
  while true; do
    kubectl get pods --all-namespaces > new.log
    last_file=$(ls -tr1 2>/dev/null | tail -2 | head -1)
    if [[ ${last_file} == new.log ]]; then
      mv new.log $(date +%s)
    else
      # If there are no changes in the pod states from the last snapshot, rename new.log to the current timestamp. Use md5sum for comparison since diff is not in catapult image
      if [[ "$(awk '{print $1, $2, $3, $4}' new.log | md5sum)" != "$(awk '{print $1, $2, $3, $4}' ${last_file} | md5sum)" ]]; then
        mv new.log $(date +%s)
      fi
    fi
    sleep 10
  done
)

# This script takes a file which contains the output from 'kubectl get pods --all-namespaces', and is named after the timestamp at which it was generated.
# It inserts the timestamp as the last field in the table, removes table formatting whitepace and outputs the headers separated by single spaces, followed by all data also separated by single spaces

# As an example, it would take a file named '1593075378' containing

# NAMESPACE     NAME                                                              READY   STATUS             RESTARTS   AGE
# cf-operator   cf-operator-668b985c46-hvl2v                                      1/1     Running            0          18m
# cf-operator   cf-operator-quarks-job-6dffc7bc88-fbw82                           1/1     Running            0          18m
# kube-system   cilium-8lfqs                                                      1/1     Running            0          34h
# kube-system   cilium-d9x9r                                                      1/1     Running            0          34h

# and generate

# namespace name ready status timestamp
# cf-operator cf-operator-668b985c46-hvl2v 1/1 Running 1593075378
# cf-operator cf-operator-quarks-job-6dffc7bc88-fbw82 1/1 Running 1593075378
# kube-system cilium-8lfqs 1/1 Running 1593075378
# kube-system cilium-d9x9r 1/1 Running 1593075378

# This table converted to json by passing it to table_to_json.awk

transform_table() {
  awk '
  NR == 1 {
    print tolower($1 " " $2 " " $3 " " $4 " timestamp")
    next
  }
  {
    print $1 " " $2 " " $3 " " $4 " '$(basename $1)'" 
  }' $1
}

# Takes path to snapshots generated by monitor_kubectl_pods from kubectl-get-pods-monitoring.sh
# Outputs a json file which can be loaded by chart web app

generate_json() {
  snapshot_dir=$1
  for table_file in $(ls -1 ${snapshot_dir}.log | grep -v new.log); do
    transform_table ${snapshot_dir}/${table_file} | ${ROOT_DIR}/include/table_to_json.awk
  done | jq -rsc .
}

