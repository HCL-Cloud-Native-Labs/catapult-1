---
apiVersion: v1
kind: Pod
metadata:
  name: brats
spec:
  restartPolicy: Never
  containers:
    - name: brats
      image: splatform/concourse-brats
      imagePullPolicy: Always
      command:
        - /bin/sh
        - -ec
        - |
          set -x -e -o pipefail

          SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

          rpm -e chromedriver
          wget -O chromedriver.zip 'https://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip'
          [ e42a55f9e28c3b545ef7c7727a2b4218c37489b4282e88903e4470e92bc1d967 = "$(shasum -a 256 chromedriver.zip | cut -d' ' -f1)" ]
          unzip chromedriver.zip -d /usr/local/bin/
          rm chromedriver.zip

          cf login --skip-ssl-validation -a ${BRATS_CF_HOST} -u ${BRATS_CF_USERNAME} -p ${BRATS_CF_PASSWORD} -o system
          cf create-space tmp
          cf target -s tmp

          # Setup git
          git config --global user.email "johndoe@example.com"
          git config --global user.name "johndoe"

          git clone --recurse-submodules https://github.com/SUSE/cf-${BRATS_BUILDPACK}-buildpack.git
          pushd cf-${BRATS_BUILDPACK}-buildpack
          git checkout "${BRATS_BUILDPACK_VERSION}"
          git submodule sync --recursive && \
          git submodule update --init --recursive && \
          git submodule foreach --recursive "git checkout . && git reset --hard && git clean -dffx"

          # Make sure the manifest and version file from git are not used
          rm manifest.yml VERSION 2>&1

          # Fetch our buildpack and use our manifest and version files
          wget ${BRATS_BUILDPACK_URL}
          unzip ${BRATS_BUILDPACK}-buildpack*.zip manifest.yml VERSION

          # In some cases the manifest stays intact after inflation and we don't want
          # the script to exit because there is nothing to commit.
          # (e.g. the binary buildpack comes from upstream)
          if [[ -n $(git status -s | grep ' M') ]]; then
            git commit manifest.yml VERSION -m "Replace manifest and VERSION by the version to test"
          fi

          if [ "${BRATS_TEST_SUITE}" == "brats" ]; then
            scripts/${BRATS_TEST_SUITE}.sh
          else
            # https://github.com/cloudfoundry/libbuildpack/pull/24/files
            export CF_STACK_DOCKER_IMAGE=registry.opensuse.org/cloud/platform/stack/rootfs/images/sle15:latest

            # Do not fail on integration tests at the moment
            scripts/${BRATS_TEST_SUITE}.sh 2>&1
          fi
      env:
      - name: COMPOSER_GITHUB_OAUTH_TOKEN
        value: <%= ENV["COMPOSER_GITHUB_OAUTH_TOKEN"] %>
      - name: BRATS_CF_HOST
        value: <%= ENV["BRATS_CF_HOST"] %>
      - name: BRATS_CF_USERNAME
        value: <%= ENV["BRATS_CF_USERNAME"] %>
      - name: BRATS_CF_PASSWORD
        value: <%= ENV["BRATS_CF_PASSWORD"] %>
      - name: BRATS_BUILDPACK
        value: <%= ENV["BRATS_BUILDPACK"] %>
      - name: BRATS_BUILDPACK_VERSION
        value: <%= ENV["BRATS_BUILDPACK_VERSION"] %>
      - name: BRATS_BUILDPACK_URL
        value: <%= ENV["BRATS_BUILDPACK_URL"] %>
      - name: BRATS_TEST_SUITE
        value: <%= ENV["BRATS_TEST_SUITE"] %>
      - name: GINKGO_NODES
        value: "<%= ENV["GINKGO_NODES"] %>"
      - name: GINKGO_ATTEMPTS
        value: "<%= ENV["GINKGO_ATTEMPTS"] %>"
      - name: PROXY_SCHEME
        value: "<%= ENV["PROXY_SCHEME"] %>"
      - name: PROXY_PORT
        value: "<%= ENV["PROXY_PORT"] %>"
      - name: PROXY_USERNAME
        value: "<%= ENV["PROXY_USERNAME"] %>"
      - name: PROXY_PASSWORD
        value: "<%= ENV["PROXY_PASSWORD"] %>"
      - name: PROXY_HOST
        value: "<%= ENV["PROXY_HOST"] %>"
      - name: CF_STACK
        value: "<%= ENV["CF_STACK"] %>"
      - name: DOCKER_HOST
        value: "tcp://localhost:2375"
    - name: dind-daemon
      image: docker:1.12.6-dind
      resources:
        requests:
          cpu: 20m
          memory: 512Mi
      securityContext:
        privileged: true
      volumeMounts:
        - name: docker-graph-storage
          mountPath: /var/lib/docker
  volumes:
    - name: docker-graph-storage
      emptyDir: {}